import{Aa as D,Ca as h,Da as T,Ea as v,a as l,c as n,f as d,j as f,m as u,ta as m,va as c,wa as k,xa as y,ya as p,za as i}from"./chunk-SP47PYLO.js";var b=class a{firestore=u(m);transactionsCollection=y(this.firestore,"transactions");addTransaction(t){return n(this,null,function*(){let r=yield this.getAllDrinksFromPreviousTransactions();return t.drinks=r.map(o=>({name:o.name,quantity:t.drinks.find(s=>s.name===o.name)?.quantity||0})).filter(o=>o.quantity>0),k(this.transactionsCollection,t).then(()=>console.log("Stock Transaction saved!")).catch(o=>console.error("Error while saving: ",o))})}getTransactions(){let t=T(this.transactionsCollection,h("date","desc"));return c(t,{idField:"id"})}getTransactionById(t){return n(this,null,function*(){let r=i(this.firestore,`transactions/${t}`),o=yield D(r);return o.exists()?l({id:t},o.data()):null})}updateTransaction(t){return n(this,null,function*(){if(!t.id)return;let r=i(this.firestore,`transactions/${t.id}`);yield v(r,{name:t.name,isRestock:t.isRestock,drinks:t.drinks.filter(o=>o.quantity>0)})})}deleteTransaction(t){return n(this,null,function*(){let r=i(this.firestore,`transactions/${t}`);yield p(r)})}getAllDrinksFromPreviousTransactions(){return n(this,null,function*(){try{if(!this.firestore||!this.transactionsCollection)return console.error("Firestore or transactions collection not initialized"),[];let t=yield d(c(this.transactionsCollection,{idField:"id"})),r=new Map;return!t||t.length===0?[]:(t.forEach(s=>{s.drinks.forEach(e=>{r.has(e.name)||r.set(e.name,{name:e.name,quantity:0})})}),Array.from(r.values()))}catch(t){return console.error("Error fetching transactions:",t),[]}})}static \u0275fac=function(r){return new(r||a)};static \u0275prov=f({token:a,factory:a.\u0275fac,providedIn:"root"})};export{b as a};
